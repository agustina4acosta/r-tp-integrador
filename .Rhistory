meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
head(10)
world_map <- map_data("world")
ggplot()+
geom_polygon(data= world_map, aes(x = long, y = lat, group = group), fill="lightgray", color="white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
scale_size_continuous(range = c(5,15)) +
labs(title = "Distribución Geográfica de Meteoritos Caídos sobre los Continentes",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
# Filtrar meteoritos que no tienen valores NA en masa, latitud y longitud
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Filtrar meteoritos que han caído y obtener los 10 más pesados
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
head(10)  # Seleccionar solo los 10 más pesados
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
scale_size_continuous(range = c(5, 15)) +  # Aumenta el tamaño de los puntos
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
# Filtrar meteoritos que no tienen valores NA en masa, latitud y longitud
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Filtrar meteoritos que han caído y obtener los 10 más pesados
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
head(10)  # Seleccionar solo los 10 más pesados
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
world_map <- map_data("world")
# Tu código de R va
# Filtrar meteoritos que no tienen valores NA en masa, latitud y longitud
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
world_map <- map_data("world")
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
head(10)
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
filter(fall == "Fell") %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
head(10)
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
View(meteoritos_caidos)
# Tu código de R va aquí
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
head(10)
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
world_map <- map_data("world")
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
# Crear el gráfico
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(high = "red", low = "blue" ) +
labs(title = "Distribución Geográfica de los 10 Meteoritos Más Pesados Caídos",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.6) +
scale_color_gradient(high = "red", low = "blue") +
labs(title = "Distribución Geográfica de los Meteoritos Caídos (Rojo: Más Pesado)",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.9) +
scale_color_gradient(high = "red", low = "blue") +
labs(title = "Distribución Geográfica de los Meteoritos Caídos (Rojo: Más Pesado)",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
slice_head(n = 10)
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.9) +
scale_color_gradient(high = "red", low = "blue") +
labs(title = "Distribución Geográfica de los Meteoritos Caídos (Rojo: Más Pesado)",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
slice_head(n = 10)
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.9) +
scale_color_gradient(high = "red", low = "blue") +
scale_size_continuous(range = c(3, 10)) +
labs(title = "Distribución Geográfica de los Meteoritos Caídos (Rojo: Más Pesado)",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg)) %>%
world_map <- map_data("world")
# Tu código de R va
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
meteoritos_caidos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass_kg))
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "white") +
geom_point(data = meteoritos_caidos, aes(x = long, y = lat, color = mass_kg, size = mass_kg), alpha = 0.9) +
scale_color_gradient(high = "red", low = "blue") +
labs(title = "Distribución Geográfica de los Meteoritos Caídos (Rojo: Más Pesado)",
x = "Longitud", y = "Latitud", color = "Masa (kg)", size = "Masa (kg)") +
theme_minimal() +
theme(panel.grid = element_blank())
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_text(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", size = 3, vjust = -1) +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2, vjust = -1) +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2, vjust = -2) +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2, vjust = 2) +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label_repel(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2,
box.padding = 0.5, point.padding = 0.3, segment.color = "gray") +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
install.packages("ggrepel")
library(tidyverse)
library(rnaturalearth)
library(ggrepel)
library(metR)
library(scales)
library(knitr)
library(kableExtra)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
meteoritos <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-11/meteorites.csv")
install.packages("ggrepel")
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label_repel(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2,
box.padding = 0.5, point.padding = 0.3, segment.color = "gray") +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
install.packages("ggrepel")
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
install.packages("ggrepel")
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
install.packages("ggrepel")
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
library(tidyverse)
library(rnaturalearth)
library(ggrepel)
library(metR)
library(scales)
library(knitr)
library(kableExtra)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
meteoritos <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-11/meteorites.csv")
install.packages("ggrepel")
# Tu código de R va aquí
meteoritos_filtrados <- meteoritos %>%
filter(!is.na(mass), !is.na(lat), !is.na(long))
# Encontrar los meteoritos más pesados
top_meteoritos <- meteoritos_filtrados %>%
mutate(mass_kg = mass / 1000) %>%
arrange(desc(mass)) %>%
slice_head(n = 10)  # Seleccionar los 10 más pesados
# Crear un mapa base del mundo
mapa_mundo <- map_data("world")
# Visualización de los meteoritos en el mapa
ggplot() +
geom_polygon(data = mapa_mundo, aes(x = long, y = lat, group = group),
fill = "lightblue", color = "white") +
geom_point(data = meteoritos_filtrados, aes(x = long, y = lat),
color = "red", alpha = 0.5, size = 1) +
geom_point(data = top_meteoritos, aes(x = long, y = lat),
color = "blue", size = 3) +
geom_label_repel(data = top_meteoritos, aes(x = long, y = lat, label = name),
color = "black", fill = "white", size = 3, label.size = 0.2,
box.padding = 0.5, point.padding = 0.3, segment.color = "gray") +
labs(
title = "Distribución Geográfica de Meteoritos",
subtitle = "Los puntos azules representan los meteoritos más pesados",
x = "Longitud", y = "Latitud"
) +
theme_minimal()
